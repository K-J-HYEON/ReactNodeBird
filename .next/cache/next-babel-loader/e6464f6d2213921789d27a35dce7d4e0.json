{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, UNFOLLOW_REQUEST } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log(\"saga logIn\"); // const result = yield call(logInAPI, action.data);\n\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logOut\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/follow\");\n}\n\nfunction* follow() {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchFollow), fork(watchUnfollow), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/kjh/Desktop/node-bird/prepare/front/sagas/user.js"],"names":["all","fork","takeLatest","put","delay","axios","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","UNFOLLOW_REQUEST","logInAPI","data","post","logIn","action","console","log","type","err","error","response","logOutAPI","logOut","result","signUpAPI","signUp","followAPI","follow","watchFollow","watchUnfollow","unfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, put, delay } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  UNFOLLOW_REQUEST,\r\n} from \"../reducers/user\";\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/api/login\", data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    console.log(\"saga logIn\");\r\n    // const result = yield call(logInAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/api/logOut\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI() {\r\n  return axios.post(\"/api/signUp\");\r\n}\r\n\r\nfunction* signUp() {\r\n  try {\r\n    // const result = yield call(signUpAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI() {\r\n  return axios.post(\"/api/follow\");\r\n}\r\n\r\nfunction* follow() {\r\n  try {\r\n    // const result = yield call(followAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchFollow), fork(watchUnfollow), fork(watchLogOut), fork(watchSignUp)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}