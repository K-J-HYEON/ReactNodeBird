{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducer from \"../reducers\";\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      // if (typeof action === 'function') {\n      //   return action(dispatch, getState);\n      // }\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunkMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/kjh/Desktop/node-bird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","thunkMiddleware","reducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,gBAAgB,GACpB,SADIA,gBACJ;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SACA,UAACC,IAAD;AAAA,WACA,UAACC,MAAD,EAAY;AACV;AACA;AACA;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KARD;AAAA,GADA;AAAA,CADF;;AAYA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,CAACV,eAAD,EAAkBE,gBAAlB,CAApB;AACA,MAAMS,QAAQ,GACZ,QACId,OAAO,CAACD,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CADX,GAEIX,mBAAmB,CAACH,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CAHzB;AAIA,MAAME,KAAK,GAAGd,WAAW,CAACG,OAAD,EAAUU,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CARD;;AAUA,IAAMC,OAAO,GAAGlB,aAAa,CAACc,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport reducer from \"../reducers\";\r\n\r\nconst loggerMiddleware =\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  (action) => {\r\n    // if (typeof action === 'function') {\r\n    //   return action(dispatch, getState);\r\n    // }\r\n\r\n    console.log(action);\r\n    return next(action);\r\n  };\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [thunkMiddleware, loggerMiddleware];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}